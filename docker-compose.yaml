services:
  backend:
    build:
      context: ./backend
    container_name: backend
    volumes:
      - ./backend/files:/app/backend/files:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DB_USERNAME: ${DB_LOGIN}
      DB_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/${DB_NAME}
    ports:
      - "8080:8080"
    restart: always
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    expose:
      - "4200"
    restart: always
    networks:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - backend

  postgres:
    image: postgres:17
    container_name: postgres_server
    environment:
      POSTGRES_USER: ${DB_LOGIN}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
